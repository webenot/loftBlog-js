{"version":3,"sources":["dz.jsx"],"names":[],"mappings":"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","file":"dz.js","sourcesContent":["/**\r\n* Created by aquilla on 12.01.2017.\r\n*/\r\nfunction isAllTrue(source, fn) {\r\n\ttry {\r\n\t\t//console.log(Array.isArray(source));\r\n\t\tif (!Array.isArray(source)) {\r\n\t\t\tthrow new Error('Первым параметром должен быть массив!');\r\n\t\t}\r\n\t\tif (source.length == 0) {\r\n\t\t\tthrow new Error('Массив не должен быть пустым!');\r\n\t\t}\r\n\t\t//console.log(typeof fn);\r\n\t\tif (typeof fn !== 'function') {\r\n\t\t\tthrow new Error('Вторым параметром должна быть функция!');\r\n\t\t}\r\n\t\tfor (let i = 0; i < source.length; i++) {\r\n\t\t\tif (!isNumber(source[i]))\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t} catch (e) {\r\n\t\tconsole.error(e.message);\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nfunction isNumber(val) {\r\n\treturn typeof val === 'number';\r\n}\r\n\r\nlet allNumbers = [1, 2, 4, 5, 6, 7, 8],\r\n\tsomeNumbers = [1, 2, 'привет', 4, 5, 'loftschool', 6, 7, 8],\r\n\tnoNumbers = ['это', 'массив', 'без', 'чисел'];\r\n\r\nlet emptyArray = [];\r\n\r\nconsole.log(isAllTrue(allNumbers, isNumber));\r\nconsole.log(isAllTrue(someNumbers, isNumber));\r\nconsole.log(isAllTrue(noNumbers, isNumber));\r\n//console.log(isAllTrue(emptyArray, isNumber));\r\n\r\nconsole.log('=======================================================');\r\n\r\nfunction isSomeTrue(source, fn) {\r\n\ttry {\r\n\t\t//console.log(Array.isArray(source));\r\n\t\tif (!Array.isArray(source)) {\r\n\t\t\tthrow new Error('Первым параметром должен быть массив!');\r\n\t\t}\r\n\t\tif (source.length == 0) {\r\n\t\t\tthrow new Error('Массив не должен быть пустым!');\r\n\t\t}\r\n\t\t//console.log(typeof fn);\r\n\t\tif (typeof fn !== 'function') {\r\n\t\t\tthrow new Error('Вторым параметром должна быть функция!');\r\n\t\t}\r\n\t\tfor (let i = 0; i < source.length; i++) {\r\n\t\t\tif (isNumber(source[i]))\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t} catch (e) {\r\n\t\tconsole.error(e.message);\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nconsole.log(isSomeTrue(allNumbers, isNumber));\r\nconsole.log(isSomeTrue(someNumbers, isNumber));\r\nconsole.log(isSomeTrue(noNumbers, isNumber));\r\n//console.log(isSomeTrue(emptyArray, isNumber));\r\n\r\nconsole.log('===================DZ 3=========================');\r\n\r\n//console.log(typeof 'string');\r\n\r\n/*\r\n let calculator = function (firstNumber) {\r\n try {\r\n //console.log(this);\r\n //console.log(typeof firstNumber);\r\n if (!isNumber(firstNumber) && typeof firstNumber !== 'string' && typeof firstNumber === 'undefined') {\r\n throw new Error('Переданный параметр должен быть числом или строкой');\r\n }\r\n } catch (e) {\r\n console.error(e.message);\r\n firstNumber = 0;\r\n return this;\r\n } finally {\r\n this.sum = function () {\r\n try {\r\n if (arguments.length == 0) {\r\n throw new Error('Вы не передали никаких параметров!');\r\n }\r\n let res = firstNumber * 1;\r\n for (let i = 0; i < arguments.length; i++) {\r\n res += arguments[i];\r\n }\r\n return res;\r\n } catch (e) {\r\n console.error(e.message);\r\n return 0;\r\n }\r\n };\r\n this.dif = function () {\r\n try {\r\n if (arguments.length == 0) {\r\n throw new Error('Вы не передали никаких параметров!');\r\n }\r\n let res = firstNumber;\r\n for (let i = 0; i < arguments.length; i++) {\r\n res -= arguments[i];\r\n }\r\n return res;\r\n } catch (e) {\r\n console.error(e.message);\r\n return 0;\r\n }\r\n };\r\n this.div = function () {\r\n try {\r\n if (arguments.length == 0) {\r\n throw new Error('Вы не передали никаких параметров!');\r\n }\r\n let res = firstNumber;\r\n for (let i = 0; i < arguments.length; i++) {\r\n if (arguments[i] == 0) {\r\n throw new Error('На ноль делить нельзя!');\r\n }\r\n res /= arguments[i];\r\n }\r\n return res;\r\n } catch (e) {\r\n console.error(e.message);\r\n return 0;\r\n }\r\n };\r\n this.mul = function () {\r\n try {\r\n if (arguments.length == 0) {\r\n throw new Error('Вы не передали никаких параметров!');\r\n }\r\n let res = firstNumber;\r\n for (let i = 0; i < arguments.length; i++) {\r\n res *= arguments[i];\r\n }\r\n return res;\r\n } catch (e) {\r\n console.error(e.message);\r\n return 0;\r\n }\r\n };\r\n return this;\r\n }\r\n };\r\n */\r\n\r\nlet calculator = require('./calculator.jsx');\r\n\r\nlet myCalculator = calculator(100);\r\n\r\nconsole.log(myCalculator.sum(1, 2, 3)); //вернет 106\r\nconsole.log(myCalculator.dif(10, 20)); //вернет 70\r\nconsole.log(myCalculator.div(2, 2)); //вернет 25\r\nconsole.log(myCalculator.mul(2, 2)); //вернет 400\r\n"]}