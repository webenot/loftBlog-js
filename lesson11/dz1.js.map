{"version":3,"sources":["dz1.jsx"],"names":[],"mappings":";;AAAA,IAAI,WAAW,QAAQ,QAAR,CAAf;;AAEA,SAAS,0EAAT,EAAqF,KAArF,EAA4F,MAA5F,EACE,IADF,CACO,oBAAY;AACjB,KAAI,SAAS,EAAb;AACA,UAAS,OAAT,CAAiB,UAAC,IAAD,EAAO,CAAP,EAAU,GAAV,EAAkB;AAClC,SAAO,CAAP,IAAY,KAAK,IAAjB;AACA,EAFD;AAGA,QAAO,IAAP;AACA,KAAI,SAAS,EAAb;AACA,QAAO,OAAP,CAAe,UAAC,IAAD,EAAO,CAAP,EAAU,GAAV,EAAkB;AAChC,SAAO,CAAP,IAAY;AACX,SAAM;AADK,GAAZ;AAGA,EAJD;AAKA,QAAO,MAAP;AACA,CAdF,EAcI,IAdJ,CAcS,oBAAY;AACnB,KAAI,QAAJ,EAAc;AACb,MAAI,SAAS,eAAe,SAA5B;AACA,MAAI,WAAW,WAAW,OAAX,CAAmB,MAAnB,CAAf;AACA,MAAI,UAAU;AACb,SAAM;AADO,GAAd;AAGA,UAAQ,SAAR,GAAoB,SAAS,OAAT,CAApB;AACA;AACD,QAAO,QAAP;AACA,CAxBF,EAwBI,IAxBJ,CAwBS,oBAAY;AACnB,SAAQ,gBAAR,CAAyB,OAAzB,EAAkC,aAAK;AACtC,MAAI,SAAS,eAAe,SAA5B;AACA,MAAI,WAAW,WAAW,OAAX,CAAmB,MAAnB,CAAf;AACA,MAAI,WAAW,EAAE,MAAF,CAAS,KAAxB;AACA,MAAI,gBAAJ;AACA,MAAI,aAAa,EAAjB,EAAqB;AACpB,aAAU;AACT,UAAM;AADG,IAAV;AAGA,WAAQ,SAAR,GAAoB,SAAS,OAAT,CAApB;AACA;AACA;AACD,MAAI,SAAS,EAAb;AAAA,MAAiB,IAAI,CAArB;AACA,WAAS,OAAT,CAAiB,gBAAQ;AACxB,OAAI,OAAO,KAAK,IAAL,CAAU,iBAAV,EAAX;AACA,OAAI,CAAC,KAAK,QAAL,CAAc,QAAd,CAAL,EAA8B;AAC7B,WAAO,CAAP,IAAY,IAAZ;AACA;AACA;AACD,GAND;AAOA,YAAU;AACT,SAAM;AADG,GAAV;AAGA,UAAQ,SAAR,GAAoB,SAAS,OAAT,CAApB;AACA,EAxBD;AAyBA,CAlDF,EAkDI,KAlDJ,CAkDU,aAAK;AACb,kDAAiB,EAAE,OAAnB;AACA,CApDF","file":"dz1.js","sourcesContent":["let sendAjax = require('./ajax');\r\n\r\nsendAjax('https://raw.githubusercontent.com/smelukov/citiesTest/master/cities.json', 'GET', 'json')\r\n\t.then(response => {\r\n\t\tlet cities = [];\r\n\t\tresponse.forEach((item, i, arr) => {\r\n\t\t\tcities[i] = item.name;\r\n\t\t});\r\n\t\tcities.sort();\r\n\t\tlet result = [];\r\n\t\tcities.forEach((item, i ,arr) => {\r\n\t\t\tresult[i] = {\r\n\t\t\t\tname: item\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}).then(response => {\r\n\t\tif (response) {\r\n\t\t\tlet source = citiesTamplate.innerHTML;\r\n\t\t\tlet template = Handlebars.compile(source);\r\n\t\t\tlet context = {\r\n\t\t\t\tlist: response\r\n\t\t\t};\r\n\t\t\tresults.innerHTML = template(context);\r\n\t\t}\r\n\t\treturn response;\r\n\t}).then(response => {\r\n\t\tmyInput.addEventListener('input', e => {\r\n\t\t\tlet source = citiesTamplate.innerHTML;\r\n\t\t\tlet template = Handlebars.compile(source);\r\n\t\t\tlet curValue = e.target.value;\r\n\t\t\tlet context;\r\n\t\t\tif (curValue === '') {\r\n\t\t\t\tcontext = {\r\n\t\t\t\t\tlist: response\r\n\t\t\t\t};\r\n\t\t\t\tresults.innerHTML = template(context);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet result = [], j = 0;\r\n\t\t\tresponse.forEach(item => {\r\n\t\t\t\tlet temp = item.name.toLocaleLowerCase();\r\n\t\t\t\tif (!temp.includes(curValue)) {\r\n\t\t\t\t\tresult[j] = item;\r\n\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tcontext = {\r\n\t\t\t\tlist: result\r\n\t\t\t};\r\n\t\t\tresults.innerHTML = template(context);\r\n\t\t});\r\n\t}).catch(e => {\r\n\t\talert(`Ошибка: ${e.message}`);\r\n\t});\r\n"]}