{"version":3,"sources":["slice.jsx"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,QAAQ,SAAR,KAAQ,GAAY;AACvB;AACA,KAAI;;AAEH,MAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AAC3B,SAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN;AACA;AACD,MAAI,sBAAO,UAAU,CAAV,CAAP,MAAwB,QAA5B,EAAsC;AACrC,SAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACA;AACD,OAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,UAAU,MAA7B,EAAqC,GAArC,EAA0C;AACzC,OAAI,OAAO,UAAU,CAAV,CAAP,KAAwB,WAAxB,IAAuC,OAAO,UAAU,CAAV,CAAP,KAAwB,QAAnE,EAA6E;AAC5E,QAAI,IAAI,CAAC,IAAI,CAAL,IAAU,CAAlB;AACA,UAAM,IAAI,KAAJ,CAAU,IAAI,8CAAd,CAAN;AACA;AACD;AACD,MAAI,MAAM,EAAV;AAAA,MAAc,IAAI,CAAlB;AAAA,MAAqB,QAAQ,UAAU,CAAV,CAA7B;AACA,MAAI,QAAS,UAAU,CAAV,MAAiB,SAAlB,GAAiC,UAAU,CAAV,IAAe,CAAhB,GAAsB,MAAM,MAAN,GAAe,IAAI,UAAU,CAAV,CAAzC,GAA0D,UAAU,CAAV,IAAe,CAAzG,GAA8G,CAA1H;AACA;AACA,MAAI,MAAM,UAAU,CAAV,MAAiB,SAAjB,GAA6B,UAAU,CAAV,IAAe,CAA5C,GAAgD,MAAM,MAAN,GAAe,CAAzE;AACA;AACA,OAAK,IAAI,KAAI,KAAb,EAAoB,KAAI,GAAxB,EAA6B,IAA7B,EAAkC;AACjC,OAAI,CAAJ,IAAS,MAAM,EAAN,CAAT;AACA;AACA;;AAED,SAAO,GAAP;AACA,EAzBD,CAyBE,OAAO,CAAP,EAAU;AACX,UAAQ,KAAR,CAAc,EAAE,OAAhB;AACA,SAAO,CAAP;AACA;AACD,CA/BD;;AAiCA,OAAO,OAAP,GAAiB,KAAjB","file":"slice.js","sourcesContent":["let slice = function () {\r\n\t//console.log(arguments.length);\r\n\ttry {\r\n\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tthrow new Error('Вы не передали никаких аргументов');\r\n\t\t}\r\n\t\tif (typeof arguments[0] !== 'object') {\r\n\t\t\tthrow new Error('Первый параметр функции slice должен быть массивом');\r\n\t\t}\r\n\t\tfor(let i = 1; i < arguments.length; i++) {\r\n\t\t\tif (typeof arguments[i] !== 'undefined' && typeof arguments[i] !== 'number') {\r\n\t\t\t\tlet n = (i + 1) * 1;\r\n\t\t\t\tthrow new Error(n + 'й параметр функции splice должен быть числом');\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet out = [], j = 0, array = arguments[0];\r\n\t\tlet begin = (arguments[1] !== undefined) ? ((arguments[1] < 0) ? (array.length + 1 * arguments[1]) : (arguments[1] - 1)): 0;\r\n\t\t//console.log(begin);\r\n\t\tlet end = arguments[2] !== undefined ? arguments[2] - 1 : array.length - 1;\r\n\t\t//console.log(end);\r\n\t\tfor (let i = begin; i < end; i++) {\r\n\t\t\tout[j] = array[i];\r\n\t\t\tj++;\r\n\t\t}\r\n\r\n\t\treturn out;\r\n\t} catch (e) {\r\n\t\tconsole.error(e.message);\r\n\t\treturn 0;\r\n\t}\r\n};\r\n\r\nmodule.exports = slice;"]}