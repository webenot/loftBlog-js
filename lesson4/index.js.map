{"version":3,"sources":["index.es6"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;;;AAIA;;;;;;AAMA;;;;;AAKA;;;;AAIA;;AAEA;;;;;AAKA;;;;;;;AAOA;AACA;;;;AAIA;;;;;;;AAOA;;AAEA;;;;;;;;;;AAUA;;AAEA,IAAI,OAAO,CACV;AACC,OAAM,MADP;AAEC,WAAU,IAFX;AAGC,QAAO;AAHR,CADU,EAMV;AACC,OAAM,UADP;AAEC,WAAU,IAFX;AAGC,QAAO;AAHR,CANU,EAWV;AACC,OAAM,KADP;AAEC,WAAU,IAFX;AAGC,QAAO;AAHR,CAXU,CAAX","file":"index.js","sourcesContent":["/*let obj1 = {\r\n\tname: 'Сергей',\r\n\tlastName: 'Мелюков',\r\n\told: 180,\r\n\tvalueOf () {\r\n\t\treturn this.old;\r\n\t},\r\n\ttoString() {\r\n\t\treturn `[${this.name}] - [${this.lastName}]`;\r\n\t}\r\n};\r\n\r\nlet obj2 = {\r\n\tname: 'Сергей',\r\n\tlastName: 'Мелюков',\r\n\told: 180,\r\n\tvalueOf () {\r\n\t\treturn this.old;\r\n\t},\r\n\ttoString() {\r\n\t\treturn `[${this.name}] - [${this.lastName}]`;\r\n\t}\r\n};*/\r\n\r\n/*if (obj1 == obj2) { // не одинаковые, сравниваются адреса, где хранятся обьекты, но если есть метод valueOf, то можно сравнивать по значению, которое возвращает этот метод, кроме сравнения ==\r\n\tconsole.log('Обьекты одинаковые!');\r\n}*/\r\n\r\n/*console.log(obj1 == obj2);\r\nconsole.log(obj1 >= obj2);\r\nconsole.log(obj1 <= obj2);\r\nconsole.log(obj1 > obj2);\r\nconsole.log(obj1 < obj2);*/\r\n\r\n/*\r\nconsole.log(obj1.lastName);\r\nconsole.log(obj1['lastName']);\r\nconsole.log(obj1[1]); // нельзя - будет undefined*/\r\n\r\n/*let key = 'lastName';\r\nconsole.log(obj1[key]);\r\nconsole.log(obj1.key); // нельзя - будет undefined*/\r\n\r\n//obj1.lastName = '!!!!!!!!!'; // можно так obj1['lastName'] = '!!!!!!!'\r\n\r\n/*\r\ndelete obj1.lastName; // можно delete obj1['lastName']\r\nconsole.log(obj1);\r\n*/\r\n\r\n/*\r\nfor (let prop in obj1) {\r\n\t//console.log(prop);\r\n\tconsole.log(obj1[prop]);\r\n\tconsole.log(obj1.prop); // нельзя - будет undefined\r\n}*/\r\n\r\n// неправильно\r\n/*\r\nif(!obj1.old) {\r\n\tconsole.log('Свойства old НЕТ в обьекте');\r\n}*/\r\n/*\r\nif(obj1.hasOwnProperty('old')) {\r\n\tconsole.log('Свойство old ЕСТЬ в обьекте');\r\n} else {\r\n\tconsole.log('Свойства old НЕТ в обьекте');\r\n}*/\r\n\r\n//console.log(Object.keys(obj1)); // метод статический\r\n\r\n/*\r\nlet keys = Object.keys(obj1);\r\n\r\nfor (let i = 0; i < keys.length; i++) {\r\n\t//console.log(keys[i]);\r\n\t//console.log(obj1[keys[i]]);\r\n\tlet key = keys[i];\r\n\tconsole.log(obj1[key]);\r\n}*/\r\n\r\n//Object.keys(obj1).forEach(key => console.log(obj1[key]));\r\n\r\nlet obj1 = [\r\n\t{\r\n\t\tname: 'name',\r\n\t\twritable: true,\r\n\t\tvalue: 'Сергей'\r\n\t},\r\n\t{\r\n\t\tname: 'lastName',\r\n\t\twritable: true,\r\n\t\tvalue: 'Мелюков'\r\n\t},\r\n\t{\r\n\t\tname: 'old',\r\n\t\twritable: true,\r\n\t\tvalue: 180\r\n\t}\r\n];"]}