{"version":3,"sources":["dz.jsx"],"names":[],"mappings":";;AAAA,IAAI,UAAU,QAAQ,WAAR,CAAd;AACA,IAAI,SAAS,QAAQ,UAAR,CAAb;AACA,IAAI,MAAM,QAAQ,OAAR,CAAV;AACA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;AACA,IAAI,SAAS,QAAQ,UAAR,CAAb;AACA,IAAI,SAAS,QAAQ,UAAR,CAAb;;AAEA,IAAI,QAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAZ;AACA;;AAEA,IAAI,eAAe,OAAO,KAAP,EAAc;AAAA,QAAQ,OAAO,CAAf;AAAA,CAAd,CAAnB;AACA;;AAEA,IAAI,QAAQ,IAAI,KAAJ,EAAW;AAAA,QAAQ,OAAK,IAAb;AAAA,CAAX,CAAZ;AACA;;AAEA;;AAEA,QAAQ,GAAR,CAAY,OAAO,KAAP,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAAZ;;AAEA;;;;AAIA;;;;;;;AAOA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;AAcA","file":"dz.js","sourcesContent":["let forEach = require('./forEach');\r\nlet filter = require('./filter');\r\nlet map = require('./map');\r\nlet slice = require('./slice');\r\nlet reduce = require('./reduce');\r\nlet splice = require('./splice');\r\n\r\nlet array = [1, 2, 3, 4, 5, 6];\r\n//forEach(array, item => console.log(item));\r\n\r\nlet greaterThan4 = filter(array, item => item > 4);\r\n//console.log(greaterThan4);\r\n\r\nlet sqare = map(array, item => item*item);\r\n//console.log(sqare);\r\n\r\n//console.log(slice(array, 3, 5));\r\n\r\nconsole.log(splice(array, 3, 2, 1, 1, 1));\r\n\r\n/*console.log(reduce(array, function(a, b) {\r\n\treturn a + b;\r\n}, 0));*/\r\n\r\n/*\r\nvar flattened = reduce([[0, 1], [2, 3], [4, 5]],function(a, b) {\r\n\treturn a.concat(b);\r\n}, []);\r\n\r\nconsole.log(flattened);*/\r\n\r\n/*\r\nvar names = ['Alice', 'Bob', 'Tiff', 'Bruce', 'Alice'];\r\n\r\nvar countedNames = reduce(names, function(allNames, name) {\r\n\tif (name in allNames) {\r\n\t\tallNames[name]++;\r\n\t}\r\n\telse {\r\n\t\tallNames[name] = 1;\r\n\t}\r\n\treturn allNames;\r\n}, {});\r\n\r\nconsole.log(countedNames);*/\r\n\r\n/*var friends = [\r\n\t{ name: \"Anna\", books: [\"Bible\", \"Harry Potter\"], age: 21 },\r\n\t{ name: \"Bob\", books: [\"War and peace\", \"Romeo and Juliet\"], age: 26 },\r\n\t{ name: \"Alice\", books: [\"The Lord of the Rings\", \"The Shining\"], age: 18 }\r\n];\r\n\r\n// allbooks - list which will contain all friends books +\r\n// additional list contained in initialValue\r\nvar allbooks = reduce(friends,function(prev, curr) {\r\n\treturn [...prev, ...curr.books];\r\n}, [\"Alphabet\"]);\r\n\r\nconsole.log(allbooks);*/\r\n\r\n/*var maxCallback = ( pre, cur ) => Math.max( pre.x, cur.x );\r\nvar maxCallback2 = ( max, cur ) => Math.max( max, cur );\r\n\r\n// reduce() without initialValue\r\nconsole.log(reduce([ { x: 22 }, { x: 42 } ], maxCallback )); // 42\r\nconsole.log(reduce([ { x: 22 }            ], maxCallback )); // { x: 22 }\r\nconsole.log(reduce( [                      ], maxCallback )); // TypeError\r\n\r\n// map/reduce; better solution, also works for empty arrays\r\nconsole.log(reduce([ { x: 22 }, { x: 42 } ].map( el => el.x ), maxCallback2, -Infinity ));*/\r\n"]}